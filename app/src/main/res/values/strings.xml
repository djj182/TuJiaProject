<resources>
    <string name="app_name">途家</string>
    <string name="discovery_theme">主题</string>
    <string name="discovery_strategy">攻略</string>
    <string name="hot_city">热门城市</string>
    <string name="newest">最新</string>
    <string name="character_text">特色</string>
    <string name="features_tab1">浪漫假期</string>
    <string name="features_tab2">高端品质</string>
    <string name="features_tab3">新奇住宿</string>
    <string name="mypage_head_text">我的途家</string>
    <string name="test"><![CDATA[能隐藏的关键是 app:layout_scrollFlags=”scroll|enterAlways”这个属性，设置滚动事件，属性里面必须至少启用scroll这个flag，这样这个view才会滚动出屏幕，否则它将一直固定在顶部。  这里我们用到了一个新的控件FloatingActionButton，它也是Design Support Library提供的，你可以把它当作ImageView。它有两个属性需要注意下：  app:layout_anchor=”“表示相对于哪个布局。 app:layout_anchorGravity=”“表示相对于布局的位置。 java代码(CoordinatorLayoutActivity .java)  package com.example.liuwangshu.mooncoordinatorlayout; import android.support.design.widget.Snackbar; import android.support.design.widget.TabLayout; import android.support.v4.app.Fragment; import android.support.v4.view.ViewPager; import android.support.v7.app.ActionBar; import android.support.v7.app.AppCompatActivity; import android.os.Bundle; import android.support.v7.widget.Toolbar; import android.view.View; import java.util.ArrayList; import java.util.List;  public class CoordinatorLayoutActivity extends AppCompatActivity {     private ViewPager mViewPager;     private TabLayout mTabLayout;      @Override     protected void onCreate(Bundle savedInstanceState) {         super.onCreate(savedInstanceState);         setContentView(R.layout.activity_tab_layout);         Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);         setSupportActionBar(toolbar);         final ActionBar ab = getSupportActionBar();         ab.setDisplayHomeAsUpEnabled(true);         mViewPager = (ViewPager) findViewById(R.id.viewpager);         initViewPager();     }      private void initViewPager() {          mTabLayout = (TabLayout) findViewById(R.id.tabs);         List<String> titles = new ArrayList<>();         titles.add(\"精选\");         titles.add(\"体育\");         titles.add(\"巴萨\");         titles.add(\"购物\");         titles.add(\"明星\");         titles.add(\"视频\");         titles.add(\"健康\");         titles.add(\"励志\");         titles.add(\"图文\");         titles.add(\"本地\");         titles.add(\"动漫\");         titles.add(\"搞笑\");         titles.add(\"精选\");         for (int i = 0; i < titles.size(); i++) {             mTabLayout.addTab(mTabLayout.newTab().setText(titles.get(i)));         }         List<Fragment> fragments = new ArrayList<>();         for (int i = 0; i < titles.size(); i++) {             fragments.add(new ListFragment());         }         FragmentAdapter mFragmentAdapteradapter =                 new FragmentAdapter(getSupportFragmentManager(), fragments, titles);         //给ViewPager设置适配器         mViewPager.setAdapter(mFragmentAdapteradapter);         //将TabLayout和ViewPager关联起来。         mTabLayout.setupWithViewPager(mViewPager);         //给TabLayout设置适配器         mTabLayout.setTabsFromPagerAdapter(mFragmentAdapteradapter);      }     public void checkin(View view) {         Snackbar.make(view, \"点击成功\", Snackbar.LENGTH_SHORT).show();     } }]]></string>
</resources>
